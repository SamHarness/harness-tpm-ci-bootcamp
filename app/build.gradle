plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'java'
    id 'application'
}

group 'io.harness'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.7.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.4'
    implementation 'org.springframework:spring-web:5.3.22'
    implementation 'org.springframework:spring-context:5.3.22'
    implementation 'org.springframework:spring-core:5.3.22'
    implementation 'org.springframework.boot:spring-boot-starter:2.7.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

application {
    mainClass = 'io.harness.trainingapp.Main'
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    // reports {
    //     junitXml.outputLocation.set(file("build/test-results/test"))
    //     html.outputLocation.set(file("build/reports/tests/test"))
    // }
    reports {
        junitXml.outputLocation.set(file("build/test-results/test-<+strategy.iteration>"))
        html.outputLocation.set(file("build/reports/tests/test-<+strategy.iteration>"))
    }
}

tasks.withType(Test) {
  if(System.getProperty("HARNESS_JAVA_AGENT")) {
    jvmArgs += [System.getProperty("HARNESS_JAVA_AGENT")]
  }
}

// This makes sure that any test tasks for subprojects don't
// fail in case the test filter does not match.
gradle.projectsEvaluated {
        tasks.withType(Test) {
            filter {
                setFailOnNoMatchingTests(false)
            }
        }
}